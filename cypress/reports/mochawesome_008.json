{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-06T18:42:54.598Z",
    "end": "2025-01-06T18:42:57.274Z",
    "duration": 2676,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b85d76ee-3bea-4d27-91e8-4c1803e0508b",
      "title": "",
      "fullFile": "cypress\\e2e\\register.cy.js",
      "file": "cypress\\e2e\\register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ccbc7e89-bf26-4d83-bbd1-56aedbfc0e07",
          "title": "Registro de Usuário",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registrando o usuário com sucesso",
              "fullTitle": "Registro de Usuário Registrando o usuário com sucesso",
              "timedOut": null,
              "duration": 1184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Teste de registro\ncy.registerUser('eve.holt@reqres.in', 'pistola').then(response => {\n  const userId = response.body.id;\n  const userToken = response.body.token;\n  cy.log(`Requisição realizada com sucesso! ID: ${userId}, Token: ${userToken}`);\n});",
              "err": {},
              "uuid": "4c0a3228-3527-4422-b4bf-8af6a5978167",
              "parentUUID": "ccbc7e89-bf26-4d83-bbd1-56aedbfc0e07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Atualizando o usuário",
              "fullTitle": "Registro de Usuário Atualizando o usuário",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Teste de atualização com um usuário já registrado\nconst userId = 2; // Um ID fixo ou gerado dinamicamente\nconst updatedUserData = {\n  nome: 'morpheus',\n  emprego: 'zion resident'\n};\ncy.updateUser(userId, updatedUserData).then(response => {\n  const updatedAt = response.body.updatedAt;\n  cy.log(`Informações do usuário atualizadas com sucesso. Novo nome: ${response.body.nome}, \n    Novo emprego: ${response.body.emprego}, Data de atualização: ${updatedAt}`);\n});",
              "err": {},
              "uuid": "cc78167f-1d13-4af8-8af5-8df11d331d96",
              "parentUUID": "ccbc7e89-bf26-4d83-bbd1-56aedbfc0e07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deletando o usuário com sucesso",
              "fullTitle": "Registro de Usuário Deletando o usuário com sucesso",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Teste de deleção do usuário\nlet userId;\ncy.deleteUser(userId); // Passando o ID do usuário para o comando de deleção\ncy.log(`Usuário com ID ${userId} deletado com sucesso.`);",
              "err": {},
              "uuid": "66b30521-92e4-4d2c-84e2-489f626712d2",
              "parentUUID": "ccbc7e89-bf26-4d83-bbd1-56aedbfc0e07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c0a3228-3527-4422-b4bf-8af6a5978167",
            "cc78167f-1d13-4af8-8af5-8df11d331d96",
            "66b30521-92e4-4d2c-84e2-489f626712d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}